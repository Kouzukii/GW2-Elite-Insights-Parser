//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LuckParser.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LuckParser.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*jshint esversion: 6 */
        ///const deadIcon = new Image();
        ///deadIcon.src = &quot;https://wiki.guildwars2.com/images/4/4a/Ally_death_%28interface%29.png&quot;;
        ///const downIcon = new Image();
        ///downIcon.src = &quot;https://wiki.guildwars2.com/images/c/c6/Downed_enemy.png&quot;;
        ///const bgImage = new Image();
        ///bgImage.onload = function () {
        ///    animateCanvas();
        ///    bgLoaded = true;
        ///};
        ///let time = 0;
        ///let inch = 10;
        ///let speed = 1;
        ///const times = [];
        ///const bossData = new Map();
        ///const playerData = new Map();
        ///const trashMobData = n [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string combatreplay_js {
            get {
                return ResourceManager.GetString("combatreplay_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .table th { border-top: 0; }
        ///
        ///.header {
        ///    text-align: center;
        ///	width: 100%;
        ///	margin-top: 6px;
        ///	margin-bottom: 10px;
        ///}
        ///
        ///.footer {
        ///    text-align: center;
        ///	margin-top: 10px;
        ///	margin-bottom: 6px;
        ///	width: 100%;
        ///}
        ///
        ///td.sorting_1 {
        ///	background-color: rgba(39,128,227,0.05);
        ///}
        ///
        ///.table &gt; tfoot &gt; tr:first-child &gt; td, .table &gt; tfoot &gt; tr:last-child &gt; td {
        ///    border-top-width: 3px;
        ///}
        ///.table &gt; tfoot &gt; tr &gt; td {
        ///	color: #888;
        ///}
        ///
        ///tr.condi td {
        ///    background-color: rgba(255,0,0,0.25);
        ///}
        ///
        ///i [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string flomix_ei_css {
            get {
                return ResourceManager.GetString("flomix_ei_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $.extend($.fn.dataTable.defaults, { searching: false, ordering: true, paging: false, dom: &quot;t&quot; });
        ///$.views.converters(&quot;dec&quot;,
        ///	function (val) {
        ///		return Math.round(val * 100) / 100;
        ///	}
        ///);
        ///$.views.converters(&quot;round&quot;,
        ///	function (val) {
        ///		return Math.round(val);
        ///	}
        ///);
        ///
        ///var urls = {
        ///	&apos;Warrior&apos;: &apos;https://wiki.guildwars2.com/images/4/43/Warrior_tango_icon_20px.png&apos;,
        ///	&apos;Berserker&apos;: &apos;https://wiki.guildwars2.com/images/d/da/Berserker_tango_icon_20px.png&apos;,
        ///	&apos;Spellbreaker&apos;: &apos;https://wiki.guildwars2.com/ima [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string flomix_ei_js {
            get {
                return ResourceManager.GetString("flomix_ei_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///&lt;html lang=&quot;en&quot;&gt;
        ///&lt;head&gt;
        ///&lt;meta charset=&quot;utf-8&quot;&gt;
        ///&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/bootswatch/4.1.1/${bootstrapTheme}/bootstrap.min.css&quot;  crossorigin=&quot;anonymous&quot;&gt;
        ///&lt;link href=&quot;https://fonts.googleapis.com/css?family=Open+Sans&quot; rel=&quot;stylesheet&quot;&gt;
        ///&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css&quot;&gt;
        ///&lt;!--${flomixCss}--&gt;
        ///&lt;script src=&quot;https://code.jquery.com/jquery-3.3.1.js&quot;&gt;&lt;/script&gt;
        ///&lt;script src [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string template_html {
            get {
                return ResourceManager.GetString("template_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;d-flex justify-content-around align-items-center justify-content-center&quot;&gt;
        ///    &lt;div class=&quot;d-flex flex-column flex-wrap&quot;&gt;
        ///        &lt;canvas width=&quot;${canvasX}px&quot; height=&quot;${canvasY}px&quot; id=&quot;replayCanvas&quot; class=&quot;replay&quot;&gt;&lt;/canvas&gt;
        ///        &lt;div class=&quot;d-flex justify-content-center slidecontainer&quot;&gt;
        ///            &lt;input style=&quot;min-width: 400px;&quot; oninput=&quot;updateTime(this.value)&quot; type=&quot;range&quot; min=&quot;0&quot; max=&quot;${maxTime}&quot; value=&quot;0&quot; class=&quot;slider&quot; id=&quot;timeRange&quot;&gt;
        ///            &lt;input style=&quot;width: 70px; text-alig [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string template_replay_html {
            get {
                return ResourceManager.GetString("template_replay_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot;&gt;
        ///	&lt;thead&gt;
        ///		&lt;tr&gt;
        ///			&lt;th width=&quot;30px&quot;&gt;Sub&lt;/th&gt;
        ///			&lt;th width=&quot;30px&quot;&gt;&lt;/th&gt;
        ///			&lt;th class=&quot;text-left&quot;&gt;Name&lt;/th&gt;
        ///			{{for boons}}
        ///			&lt;th title=&quot;{{:name}}&quot;&gt;&lt;img src=&quot;{{:icon}}&quot; alt=&quot;{{:name}}&quot; class=&quot;icon icon-hover&quot;&gt;&lt;/th&gt;
        ///			{{/for}}
        ///		&lt;/tr&gt;
        ///	&lt;/thead&gt;
        ///	&lt;tbody&gt;
        ///		{{for rows ~boons=boons}}
        ///		&lt;tr&gt;
        ///			&lt;td&gt;{{:player.group}}&lt;/td&gt;
        ///			&lt;td title=&quot;{{:player.profession}}&quot;&gt;&lt;img src=&quot;{{:player.icon}}&quot; alt=&quot;{{:player.profession}}&quot; class=&quot;ico [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplBoonTable {
            get {
                return ResourceManager.GetString("tmplBoonTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;table class=&quot;table composition&quot;&gt;
        ///&lt;tbody&gt;
        ///	{{for groups}}
        ///	{{if #data}}
        ///	&lt;tr&gt;
        ///		{{for #data}}
        ///		&lt;td&gt;
        ///			&lt;div&gt;
        ///				&lt;img src=&quot;{{:icon}}&quot; alt=&quot;{{:profession}}&quot; class=&quot;icon&quot; title=&quot;{{:profession}}&quot;&gt;
        ///				{{if condi}}&lt;img src=&quot;https://wiki.guildwars2.com/images/5/54/Condition_Damage.png&quot; alt=&quot;Condition Damage&quot; title=&quot;Condition Damage -{{:condi}}&quot; class=&quot;icon&quot;&gt;{{/if}}
        ///				{{if conc}}&lt;img src=&quot;https://wiki.guildwars2.com/images/4/44/Boon_Duration.png&quot; alt =&quot;Concentration&quot; title=&quot;Concentration -{{:conc}}&quot;  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplCompTable {
            get {
                return ResourceManager.GetString("tmplCompTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;
        ///	&lt;thead&gt;
        ///		&lt;tr&gt;
        ///			&lt;th&gt;Sub&lt;/th&gt;
        ///			&lt;th&gt;&lt;/th&gt;
        ///			&lt;th class=&quot;text-left&quot;&gt;Name&lt;/th&gt;
        ///			&lt;th&gt;Dmg Taken&lt;/th&gt;
        ///			&lt;th&gt;Dmg Barrier&lt;/th&gt;
        ///			&lt;th&gt;Blocked&lt;/th&gt;
        ///			&lt;th&gt;Invulned&lt;/th&gt;
        ///			&lt;th&gt;Evaded&lt;/th&gt;
        ///			&lt;th&gt;&lt;span data-toggle=&quot;tooltip&quot; data-html=&quot;true&quot; data-placement=&quot;top&quot; title=&quot;Dodges or Mirage Cloak &quot;&gt;Dodges&lt;/span&gt;&lt;/th&gt;
        ///			&lt;th&gt;&lt;img src=&quot;https://wiki.guildwars2.com/images/c/c6/Downed_enemy.png&quot; alt=&quot;Downs&quot; title=&quot;Times down [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDefTable {
            get {
                return ResourceManager.GetString("tmplDefTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {{if minion}}
        ///&lt;div&gt;{{&gt;minion.name}} did {{:contribution}}% of {{&gt;player.name}}&apos;s total{{if toBoss}} Boss{{/if}} dps&lt;/div&gt;
        ///{{else player}}
        ///&lt;div&gt;{{&gt;player.name}} did {{:contribution}}% of his own total{{if toBoss}} Boss{{/if}} dps&lt;/div&gt;
        ///{{/if}}
        ///&lt;table class=&quot;table table-sm table-striped table-hover&quot;  cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;
        ///	&lt;thead&gt;
        ///		&lt;tr&gt;
        ///			&lt;th class=&quot;text-left&quot;&gt;Skill&lt;/th&gt;
        ///			&lt;th&gt;&lt;/th&gt;
        ///			&lt;th&gt;Damage&lt;/th&gt;
        ///			&lt;th&gt;Min&lt;/th&gt;
        ///			&lt;th&gt;Avg&lt;/th&gt;
        ///			&lt;th&gt;Max&lt;/th&gt;
        ///			&lt;th&gt;Casts&lt;/th&gt;
        ///			&lt;th&gt;Hits&lt;/th&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDmgDistTable {
            get {
                return ResourceManager.GetString("tmplDmgDistTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;
        ///	&lt;thead&gt;
        ///		&lt;tr&gt;
        ///			&lt;th&gt;Sub&lt;/th&gt;
        ///			&lt;th&gt;&lt;/th&gt;
        ///      &lt;th class=&quot;text-left&quot;&gt;Name&lt;/th&gt;
        ///			&lt;th&gt;&lt;img src=&quot;https://wiki.guildwars2.com/images/9/95/Critical_Chance.png&quot; alt=&quot;Crits&quot; title=&quot;Percent time hits critical&quot; class=&quot;icon icon-hover&quot;&gt;&lt;/th&gt;
        ///			&lt;th&gt;&lt;img src=&quot;https://wiki.guildwars2.com/images/2/2b/Superior_Rune_of_the_Scholar.png&quot; alt=&quot;Scholar&quot; title=&quot;Percent time hits while above 90% health&quot; class=&quot;icon icon-hover&quot;&gt;&lt;/t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDmgTable {
            get {
                return ResourceManager.GetString("tmplDmgTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;
        ///	&lt;thead&gt;
        ///		&lt;tr&gt;
        ///			&lt;th class=&quot;text-left&quot;&gt;Skill&lt;/th&gt;
        ///			&lt;th&gt;Damage&lt;/th&gt;
        ///			&lt;th&gt;Percent&lt;/th&gt;
        ///			&lt;th&gt;Hits&lt;/th&gt;
        ///			&lt;th&gt;Min&lt;/th&gt;
        ///			&lt;th&gt;Avg&lt;/th&gt;
        ///			&lt;th&gt;Max&lt;/th&gt;
        ///			&lt;th&gt;Crit&lt;/th&gt;
        ///			&lt;th&gt;Flank&lt;/th&gt;
        ///			&lt;th&gt;Glance&lt;/th&gt;
        ///		&lt;/tr&gt;
        ///	&lt;/thead&gt;
        ///	&lt;tbody&gt;
        ///		{{for rows ~totalDamage=totalDamage}}
        ///		&lt;tr class=&quot;{{if skill.condi}}condi{{else}}power{{/if}}&quot;&gt;
        ///			&lt;td class=&quot;text-left&quot; title=&quot;{{:skill.id}}&quot;&gt;{{if skill.icon}}&lt;img src [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDmgTakenTable {
            get {
                return ResourceManager.GetString("tmplDmgTakenTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;table class=&quot;table table-sm table-striped table-hover&quot;  cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;
        ///	&lt;thead&gt;
        ///		&lt;tr&gt;
        ///			&lt;th&gt;Sub&lt;/th&gt;
        ///			&lt;th&gt;&lt;/th&gt;
        ///			&lt;th class=&quot;text-left&quot;&gt;Name&lt;/th&gt;
        ///			&lt;th&gt;Account&lt;/th&gt;
        ///			&lt;th&gt;Boss DPS&lt;/th&gt;
        ///			&lt;th&gt;Power&lt;/th&gt;
        ///			&lt;th&gt;Condi&lt;/th&gt;
        ///			&lt;th&gt;All DPS&lt;/th&gt;
        ///			&lt;th&gt;Power&lt;/th&gt;
        ///			&lt;th&gt;Condi&lt;/th&gt;
        ///			&lt;th&gt;&lt;img src=&quot;https://wiki.guildwars2.com/images/c/c6/Downed_enemy.png&quot; alt=&quot;Downs&quot; title=&quot;Times downed&quot; class=&quot;icon icon-hover&quot;&gt;&lt;/th&gt;
        ///			&lt;th&gt;&lt;img src=&quot;https://wiki.guildwars2.com/images/4/4a/All [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplDpsTable {
            get {
                return ResourceManager.GetString("tmplDpsTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;d-flex flex-column justify-content-center align-items-center mt-2&quot;&gt;
        ///        &lt;h3&gt;Group ${group}&lt;/h3&gt;
        ///        &lt;!--${players}--&gt;
        ///&lt;/div&gt;.
        /// </summary>
        internal static string tmplGroupCombatReplay {
            get {
                return ResourceManager.GetString("tmplGroupCombatReplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;table class=&quot;table table-sm table-striped table-hover&quot; cellspacing=&quot;0&quot;&gt;
        ///	&lt;thead&gt;
        ///		&lt;tr&gt;
        ///			{{if ~playerMech}}
        ///			&lt;th width=&quot;30px&quot;&gt;Sub&lt;/th&gt;
        ///			&lt;th width=&quot;30px&quot;&gt;&lt;/th&gt;
        ///			&lt;th class=&quot;text-left&quot;&gt;Player&lt;/th&gt;
        ///			{{else}}
        ///			&lt;th class=&quot;text-left&quot;&gt;Enemy&lt;/th&gt;
        ///			{{/if}}
        ///			{{for mechanics}}
        ///			{{if playerMech &amp;&amp; ~playerMech || enemyMech &amp;&amp; !~playerMech}}
        ///				&lt;th title=&quot;{{:description}}&quot;&gt;{{:shortName}}&lt;/th&gt;
        ///			{{/if}}
        ///			{{/for}}
        ///		&lt;/tr&gt;
        ///	&lt;/thead&gt;
        ///	&lt;tbody&gt;
        ///		{{for rows ~mechanics=mechanics}}
        ///		&lt;tr&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplMechanicTable {
            get {
                return ResourceManager.GetString("tmplMechanicTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;td&gt;{{:player.group}}&lt;/td&gt;
        ///&lt;td title=&quot;{{:player.profession}}&quot;&gt;&lt;img src=&quot;{{:player.icon}}&quot; alt=&quot;{{:player.profession}}&quot; class=&quot;icon&quot;&gt;&lt;span style=&quot;display:none&quot;&gt;{{:player.profession}}&lt;/span&gt;&lt;/td&gt;
        ///&lt;td class=&quot;text-left&quot;&gt;{{:player.name}}&lt;/td&gt;.
        /// </summary>
        internal static string tmplPlayerCells {
            get {
                return ResourceManager.GetString("tmplPlayerCells", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;label id=&quot;id${instid}&quot; style=&quot;width: 150px;&quot; onclick=&quot;selectActor(${instid});&quot; class=&quot;btn btn-dark&quot;&gt;
        ///    ${playerName}
        ///    &lt;img src=&quot;${imageURL}&quot; alt=&quot;${prof}&quot; height=&quot;18&quot; width=&quot;18&quot;&gt;
        ///&lt;/label&gt; .
        /// </summary>
        internal static string tmplPlayerSelectCombatReplay {
            get {
                return ResourceManager.GetString("tmplPlayerSelectCombatReplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;table class=&quot;table table-sm table-striped table-hover&quot;  cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;
        ///	&lt;thead&gt;
        ///		&lt;tr&gt;
        ///			&lt;th&gt;Sub&lt;/th&gt;
        ///			&lt;th&gt;&lt;/th&gt;
        ///			&lt;th&gt;Name&lt;/th&gt;
        ///			&lt;th&gt;Condi Cleanse&lt;/th&gt;
        ///			&lt;th&gt;Resurrects&lt;/th&gt;
        ///		&lt;/tr&gt;
        ///	&lt;/thead&gt;
        ///	&lt;tbody&gt;
        ///		{{for rows}}
        ///		&lt;tr&gt;
        ///			{{include tmpl=&quot;tmplPlayerCells&quot;/}}
        ///			&lt;td title=&quot;{{:data[1]}} seconds&quot;&gt;{{:data[0]}}&lt;/td&gt;
        ///			&lt;td title=&quot;{{:data[3]}} seconds&quot;&gt;{{:data[2]}}&lt;/td&gt;
        ///		&lt;/tr&gt;
        ///		{{/for}}
        ///	&lt;/tbody&gt;
        ///	&lt;tfoot&gt;
        ///		{{for sums}}
        ///		&lt;tr&gt;
        ///			&lt;td&gt;&lt;/td&gt;
        ///			&lt;td&gt;&lt;/td&gt;
        ///			&lt;td c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplSupTable {
            get {
                return ResourceManager.GetString("tmplSupTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ul class=&quot;nav nav-tabs&quot;&gt;
        ///	{{for tabs}}
        ///	{{if subtabs}}
        ///	&lt;li class=&quot;nav-item dropdown&quot;&gt;&lt;a class=&quot;nav-link dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; href=&quot;#&quot; role=&quot;button&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;true&quot;&gt;{{&gt;name}}&lt;/a&gt;
        ///		&lt;div class=&quot;dropdown-menu&quot; x-placement=&quot;bottom-start&quot;&gt;
        ///			{{for subtabs ~idPrefix=~idPrefix+#getIndex()+&quot;-&quot; tabindex=#getIndex()}}
        ///				&lt;a class=&quot;dropdown-item&quot; data-toggle=&quot;tab&quot; href=&quot;#{{:~idPrefix+#index}}&quot;&gt;{{if icon}}&lt;img src=&quot;{{attr:icon}}&quot; alt=&quot;{{attr:iconName}}&quot; title=&quot;{{at [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tmplTabs {
            get {
                return ResourceManager.GetString("tmplTabs", resourceCulture);
            }
        }
    }
}
